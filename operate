
$ git status

# stage
$ git add [file]

# unstage
$ git reset [file]

# commit
$ git commit -m "message"
$ git commit -m "message" --amend

# uncommit
$ git reset HEAD^ --soft


# push
$ git push origin master


# pull = fetch + merge
$ git pull [origin master]

# origin에서 master 브랜치를 가져오고, 지역 저장소 복사본의 이름을 origin/master로 지정한다
$ git fetch [origin master]
$ git merge origin/master


#
# history & revision
#

# log
# -p  patch
$ git log
$ git log --oneline
$ git log -p


# show HEAD
$ git reflog

# reset
$ git reset HEAD^ --hard
$ git reset HEAD~2 --hard
$ git reset 991ee8c --mixed


#
# branch/commit traverse
#
$ git checkout <branch>
$ git checkout <commit-id>
$ git checkout main (or master)


#
# diff
#

# Working Directory <--> Staging Area
$ git diff [-- file]

# Working/Staging <--> Repository
$ git diff HEAD

# Staging <--> Repository
$ git diff --staged

# branch1 Repository <--> branch2 Repository
$ git diff <branch1>..<branch2>
# Working directory <--> currrent Repository <--> branch2 Repository
$ git diff <branch2>

# commit1 <--> commit2
$ git diff <commit1-hash>..<commit2-hash>

# files changed between branch1 and branch2 
git diff --name-status branch1..branch2
git diff --name-only branch1..branch2

# local branch <--> remote branch
$ git fetch
$ git branch -a
$ git diff <local-branch> <remote-branch>
$ git diff master origin/master

#
# difftool
#
$ git difftool master..work

$ git diff origin/<branch1>..origin/<branch2>


#
#
#

$ git --version

